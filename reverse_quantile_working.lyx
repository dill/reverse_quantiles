#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\begin_preamble
\setcitestyle{round}

% get independent symbol
\def\independenT#1#2{\mathrel{\rlap{$#1#2$}\mkern2mu{#1#2}}}
\newcommand{\independent}{\protect\mathpalette{\protect\independenT}{\perp}}
\end_preamble
\use_default_options true
\begin_modules
knitr
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command bibtex
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine natbib
\cite_engine_type authoryear
\biblio_style plainnat
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2cm
\topmargin 2cm
\rightmargin 2cm
\bottommargin 2cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Reverse quantiles for log-Normal
\end_layout

\begin_layout Author
David L Miller
\end_layout

\begin_layout Date
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
today
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Sometimes we have, say, posterior samples from a distribution.
 We want to know what the standard deviation of that distribution (or the
 CV or somesuch) but only have the samples and their mean.
 How can we get to the standard deviation from there? Based on calculations
 in 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

https://www.johndcook.com/quantiles_parameters.pdf
\end_layout

\end_inset

, but fully-derived here for the log-Normal case.
\end_layout

\begin_layout Standard
First, define the cumulative distribution function for a random variable
 
\begin_inset Formula $X$
\end_inset

 as:
\begin_inset Formula 
\[
F_{X}(x)=\mathbb{P}[X\leq x].
\]

\end_inset

So a quantile, we want to find 
\begin_inset Formula $x$
\end_inset

 for which
\begin_inset Formula 
\[
F_{X}(x)=\mathbb{P}[X\leq x]=q,
\]

\end_inset

where 
\begin_inset Formula $q$
\end_inset

is the appropriate quantile, for example 
\begin_inset Formula $q=0.975$
\end_inset

 or 
\begin_inset Formula $0.025$
\end_inset

.
 We might typically have these two quantiles to construct a 95% interval.
 For generality, let's say we have two quantiles such that 
\begin_inset Formula $q_{1}<q_{2}$
\end_inset

 and 
\begin_inset Formula $x_{1}<x_{2}$
\end_inset

.
\end_layout

\begin_layout Standard
For a normally distributed 
\begin_inset Formula $X$
\end_inset

, we can standardize 
\begin_inset Formula $X$
\end_inset

, such that 
\begin_inset Formula $Z=\frac{X-\mu}{\sigma}$
\end_inset

 and then 
\begin_inset Formula $F_{Z}(z)=\Phi(z)$
\end_inset

 (i.e., the 
\begin_inset Formula $\text{Normal}(0,1)$
\end_inset

 cumulative distribution function, so 
\begin_inset Formula 
\[
\mathbb{P}\left[Z\leq\frac{x-\mu}{\sigma}\right]=\Phi\left(\frac{x-\mu}{\sigma}\right)=q.
\]

\end_inset


\end_layout

\begin_layout Standard
Now for a log-Normally distributed 
\begin_inset Formula $X$
\end_inset

, we have that:
\begin_inset Formula 
\[
X\sim\text{logNormal}(\mu,\sigma^{2})\quad\Rightarrow\quad Y=\log X\sim\text{Normal}(\mu,\sigma^{2}),
\]

\end_inset

so we need to calulate 
\begin_inset Formula 
\begin{equation}
\mathbb{P}[Y\leq\log x]=\Phi\left(\frac{\log x-\mu}{\sigma}\right)=q,\label{eq:logquan}
\end{equation}

\end_inset

and if we need to find 
\begin_inset Formula $\mu$
\end_inset

 and 
\begin_inset Formula $\sigma$
\end_inset

 then we can use two quantiles we know say 
\begin_inset Formula $q_{1}<q_{2}$
\end_inset

 and 
\begin_inset Formula $x_{1}<x_{2}$
\end_inset

.
 
\end_layout

\begin_layout Standard
So, first we re-write 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:logquan"
plural "false"
caps "false"
noprefix "false"

\end_inset

 as:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{align*}
\mu & =\log x_{i}-\Phi^{-1}\left(q_{i}\right)\sigma\quad\text{and}\\
\sigma & =\frac{\log x_{i}-\mu}{\Phi^{-1}\left(q_{i}\right)}
\end{align*}

\end_inset

where 
\begin_inset Formula $i$
\end_inset

 indexes the quantiles we know (i.e., 
\begin_inset Formula $i=1,2$
\end_inset

).
 We can then solve the above by equating the 
\begin_inset Formula $i=1$
\end_inset

 and 
\begin_inset Formula $i=2$
\end_inset

 versions of the above (since although the quantiles change, the mean and
 standard deviation do not).
\end_layout

\begin_layout Standard
To obtain 
\begin_inset Formula $\mu$
\end_inset

:
\begin_inset Formula 
\begin{align*}
\frac{\log x_{1}-\mu}{\Phi^{-1}\left(q_{1}\right)} & =\frac{\log x_{2}-\mu}{\Phi^{-1}\left(q_{2}\right)}\\
\Phi^{-1}\left(q_{2}\right)\left(\log x_{1}-\mu\right) & =\Phi^{-1}\left(q_{1}\right)\left(\log x_{2}-\mu\right)\\
\Phi^{-1}\left(q_{2}\right)\log x_{1}-\Phi^{-1}\left(q_{2}\right)\mu & =\Phi^{-1}\left(q_{1}\right)\log x_{2}-\Phi^{-1}\left(q_{1}\right)\mu\\
\Phi^{-1}\left(q_{2}\right)\log x_{1}-\Phi^{-1}\left(q_{1}\right)\log x_{2} & =\mu\left[\Phi^{-1}\left(q_{2}\right)-\Phi^{-1}\left(q_{1}\right)\right]\\
\mu & =\frac{\Phi^{-1}\left(q_{2}\right)\log x_{1}-\Phi^{-1}\left(q_{1}\right)\log x_{2}}{\Phi^{-1}\left(q_{2}\right)-\Phi^{-1}\left(q_{1}\right)}.
\end{align*}

\end_inset

and for 
\begin_inset Formula $\sigma$
\end_inset

:
\begin_inset Formula 
\begin{align*}
\log x_{1}-\Phi^{-1}\left(q_{1}\right)\sigma & =\log x_{2}-\Phi^{-1}\left(q_{2}\right)\sigma\\
\log x_{1}-\log x_{2} & =\left[\Phi^{-1}\left(q_{1}\right)-\Phi^{-1}\left(q_{2}\right)\right]\sigma\\
\sigma & =\frac{\log x_{1}-\log x_{2}}{\Phi^{-1}\left(q_{1}\right)-\Phi^{-1}\left(q_{2}\right)}.
\end{align*}

\end_inset


\end_layout

\begin_layout Section*
Appendix: R implementation
\end_layout

\begin_layout Standard
Below is a quick R implementation of the above equations.
\end_layout

\begin_layout Standard
\begin_inset Flex Chunk
status open

\begin_layout Plain Layout

\begin_inset Argument 1
status open

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

# go from quantiles to mean/sd for log-Normal distribution
\end_layout

\begin_layout Plain Layout

# based on working at https://www.johndcook.com/quantiles_parameters.pdf
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

# takes as input all of your samples, computes the quantiles
\end_layout

\begin_layout Plain Layout

# and then returns the mean/sd of the variable, assuming it's
\end_layout

\begin_layout Plain Layout

# log-normally distributed
\end_layout

\begin_layout Plain Layout

ln_get_mean_var <- function(samples, q1=0.025, q2=0.975){
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

  # first get where the quantiles lie, x1, x2
\end_layout

\begin_layout Plain Layout

  x1 <- quantile(samples, p=q1)
\end_layout

\begin_layout Plain Layout

  x2 <- quantile(samples, p=q2)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

  # now the inverse CDF ("quantile function", Phi^-1) for
\end_layout

\begin_layout Plain Layout

  # Normal(0,1) at the two points defined above
\end_layout

\begin_layout Plain Layout

  iCDF1 <- qnorm(q1)
\end_layout

\begin_layout Plain Layout

  iCDF2 <- qnorm(q2)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

  # now calculate the mean and sd
\end_layout

\begin_layout Plain Layout

  mu <- (iCDF2 * log(x1) - iCDF1 * log(x2))/(iCDF2 - iCDF1)
\end_layout

\begin_layout Plain Layout

  sigma <- (log(x1)-log(x2))/(iCDF1-iCDF2)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

  # use unname() to remove names from the results
\end_layout

\begin_layout Plain Layout

  return(list(mu=unname(mu), sigma=unname(sigma)))
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

# test
\end_layout

\begin_layout Plain Layout

rvs <- rlnorm(10000, 100, 10)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

# should be close to parameters above
\end_layout

\begin_layout Plain Layout

ln_get_mean_var(rvs)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_body
\end_document
